name: Evals

on:
  push:
    branches:
      - main

jobs:
  run-evals:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      BRAINTRUST_API_KEY: ${{ secrets.BRAINTRUST_API_KEY }}
      BROWSERBASE_API_KEY: ${{ secrets.BROWSERBASE_API_KEY }}
      BROWSERBASE_PROJECT_ID: ${{ secrets.BROWSERBASE_PROJECT_ID }}
      HEADLESS: true
      EVAL_ENV: browserbase

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install --no-frozen-lockfile

      - name: Install Playwright browsers
        run: npm exec playwright install --with-deps

      - name: Run Evals
        env:
          CI_EVALS: "vanta,extract_github_stars,extract_collaborators_from_github_repository,wikipedia,peeler_complex,simple_google_search,extract_last_twenty_github_commits,laroche_form"
        run: npm run evals
        timeout-minutes: 20

      - name: Check Eval Results
        run: |
          if [ -f eval-summary.json ]; then
            # Read data from eval-summary.json
            total_tasks=$(jq '.totalTasks' eval-summary.json)
            passed_tasks=$(jq '.passedTasks' eval-summary.json)
            failed_tasks=$(jq '.failedTasks' eval-summary.json)
            exact_match_score=$(jq '.exactMatchScore' eval-summary.json)

            # Count passed and failed tasks
            num_passed=$(echo "$passed_tasks" | jq 'length')
            num_failed=$(echo "$failed_tasks" | jq 'length')

            # Output summary
            echo "Total number of evals: $total_tasks"
            echo "Number of evals that passed: $num_passed"
            echo "Number of evals that failed: $num_failed"
            echo "Exact match score: $exact_match_score%"

            # Output passing evals
            if [ "$num_passed" -gt 0 ]; then
              echo ""
              echo "Passing evals:"
              echo "$passed_tasks" | jq -c '.[]' | while read -r task; do
                name=$(echo "$task" | jq -r '.name')
                model=$(echo "$task" | jq -r '.modelName')
                echo ""
                echo "name: $name"
                echo "model: $model"
              done
            fi

            # Output failing evals
            if [ "$num_failed" -gt 0 ]; then
              echo ""
              echo "Failing evals:"
              echo "$failed_tasks" | jq -c '.[]' | while read -r task; do
                name=$(echo "$task" | jq -r '.name')
                model=$(echo "$task" | jq -r '.modelName')
                echo ""
                echo "name: $name"
                echo "model: $model"
              done
            fi

            # fail if exact match score is below 85%
            if (( $(echo "$exact_match_score < 85" | bc -l) )); then
              echo "Exact match score is below 85%. Failing CI."
              exit 1
            fi
          else
            echo "Eval summary not found. Failing CI."
            exit 1
          fi
